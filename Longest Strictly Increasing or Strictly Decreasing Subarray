#include <iostream>
#include <vector>

using namespace std;
class Solution {
public:
    int longestMonotonicSubarray(vector<int>& nums) {
        int n = nums.size();
    int maxLen = 1; // Initialize with 1 since a single element is a valid subarray

    // Check for increasing subarrays
    int currLen = 1;
    for (int i = 1; i < n; i++) {
        if (nums[i] > nums[i - 1]) {
            currLen++;
        } else {
            maxLen = max(maxLen, currLen);
            currLen = 1;
        }
    }
    maxLen = max(maxLen, currLen);

    // Check for decreasing subarrays
    currLen = 1;
    for (int i = 1; i < n; i++) {
        if (nums[i] < nums[i - 1]) {
            currLen++;
        } else {
            maxLen = max(maxLen, currLen);
            currLen = 1;
        }
    }
    maxLen = max(maxLen, currLen);

    return maxLen;
    }
};
