class Solution {
public:
    int minimumOperations(vector<vector<int>>& grid) {
         int rows = grid.size();
        int cols = grid[0].size();

        vector<vector<int>> ops(cols + 1, vector<int>(10, (int)1e9));
        for (int i = 0; i < 10; i++)
            ops[0][i] = 0;

        for (int j = 0; j < cols; j++) {
            for (int k = 0; k <= 9; k++) {
                int total_ops = 0;
                for (int i = 0; i < rows; i++) {
                    total_ops += grid[i][j] != k;
                }
                for (int l = 0; l <= 9; l++) {
                    if (k != l)
                        ops[j + 1][k] = min(ops[j + 1][k], ops[j][l] + total_ops);
                }
            }
        }

        int res = INT_MAX;
        for (int k = 0; k <= 9; k++)
            res = min(res, ops[cols][k]);
        return res == INT_MAX ? -1 : res;

    }
};
